// Code generated by protoc-gen-validate. DO NOT EDIT.
// source: auth_provisional_signup.proto

package gen

import (
	"bytes"
	"errors"
	"fmt"
	"net"
	"net/mail"
	"net/url"
	"regexp"
	"strings"
	"time"
	"unicode/utf8"

	"google.golang.org/protobuf/types/known/anypb"
)

// ensure the imports are used
var (
	_ = bytes.MinRead
	_ = errors.New("")
	_ = fmt.Print
	_ = utf8.UTFMax
	_ = (*regexp.Regexp)(nil)
	_ = (*strings.Reader)(nil)
	_ = net.IPv4len
	_ = time.Duration(0)
	_ = (*url.URL)(nil)
	_ = (*mail.Address)(nil)
	_ = anypb.Any{}
)

// Validate checks the field values on PostAuthProvisionalSignupRequest with
// the rules defined in the proto definition for this message. If any rules
// are violated, an error is returned.
func (m *PostAuthProvisionalSignupRequest) Validate() error {
	if m == nil {
		return nil
	}

	if utf8.RuneCountInString(m.GetEmail()) < 1 {
		return PostAuthProvisionalSignupRequestValidationError{
			field:  "Email",
			reason: "value length must be at least 1 runes",
		}
	}

	if utf8.RuneCountInString(m.GetFirstName()) < 1 {
		return PostAuthProvisionalSignupRequestValidationError{
			field:  "FirstName",
			reason: "value length must be at least 1 runes",
		}
	}

	if utf8.RuneCountInString(m.GetLastName()) < 1 {
		return PostAuthProvisionalSignupRequestValidationError{
			field:  "LastName",
			reason: "value length must be at least 1 runes",
		}
	}

	if utf8.RuneCountInString(m.GetFirstNameHuri()) < 1 {
		return PostAuthProvisionalSignupRequestValidationError{
			field:  "FirstNameHuri",
			reason: "value length must be at least 1 runes",
		}
	}

	if utf8.RuneCountInString(m.GetLastNameHuri()) < 1 {
		return PostAuthProvisionalSignupRequestValidationError{
			field:  "LastNameHuri",
			reason: "value length must be at least 1 runes",
		}
	}

	if utf8.RuneCountInString(m.GetScreenName()) < 1 {
		return PostAuthProvisionalSignupRequestValidationError{
			field:  "ScreenName",
			reason: "value length must be at least 1 runes",
		}
	}

	if utf8.RuneCountInString(m.GetBirthday()) < 10 {
		return PostAuthProvisionalSignupRequestValidationError{
			field:  "Birthday",
			reason: "value length must be at least 10 runes",
		}
	}

	if utf8.RuneCountInString(m.GetPassword()) < 8 {
		return PostAuthProvisionalSignupRequestValidationError{
			field:  "Password",
			reason: "value length must be at least 8 runes",
		}
	}

	if utf8.RuneCountInString(m.GetPasswordConfirm()) < 8 {
		return PostAuthProvisionalSignupRequestValidationError{
			field:  "PasswordConfirm",
			reason: "value length must be at least 8 runes",
		}
	}

	return nil
}

// PostAuthProvisionalSignupRequestValidationError is the validation error
// returned by PostAuthProvisionalSignupRequest.Validate if the designated
// constraints aren't met.
type PostAuthProvisionalSignupRequestValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e PostAuthProvisionalSignupRequestValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e PostAuthProvisionalSignupRequestValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e PostAuthProvisionalSignupRequestValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e PostAuthProvisionalSignupRequestValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e PostAuthProvisionalSignupRequestValidationError) ErrorName() string {
	return "PostAuthProvisionalSignupRequestValidationError"
}

// Error satisfies the builtin error interface
func (e PostAuthProvisionalSignupRequestValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sPostAuthProvisionalSignupRequest.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = PostAuthProvisionalSignupRequestValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = PostAuthProvisionalSignupRequestValidationError{}

// Validate checks the field values on PostAuthProvisionalSignupResponse with
// the rules defined in the proto definition for this message. If any rules
// are violated, an error is returned.
func (m *PostAuthProvisionalSignupResponse) Validate() error {
	if m == nil {
		return nil
	}

	return nil
}

// PostAuthProvisionalSignupResponseValidationError is the validation error
// returned by PostAuthProvisionalSignupResponse.Validate if the designated
// constraints aren't met.
type PostAuthProvisionalSignupResponseValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e PostAuthProvisionalSignupResponseValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e PostAuthProvisionalSignupResponseValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e PostAuthProvisionalSignupResponseValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e PostAuthProvisionalSignupResponseValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e PostAuthProvisionalSignupResponseValidationError) ErrorName() string {
	return "PostAuthProvisionalSignupResponseValidationError"
}

// Error satisfies the builtin error interface
func (e PostAuthProvisionalSignupResponseValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sPostAuthProvisionalSignupResponse.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = PostAuthProvisionalSignupResponseValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = PostAuthProvisionalSignupResponseValidationError{}
